
import { useMutation } from '@tanstack/react-query';
import { supabase } from '@/integrations/supabase/client';
import { useToast } from '@/hooks/use-toast';

interface SendDiscountCodeData {
  discountCodeId: string;
  customerEmail: string;
  customerName: string;
}

export const useSendDiscountCode = () => {
  const { toast } = useToast();

  return useMutation({
    mutationFn: async (data: SendDiscountCodeData) => {
      const { data: result, error } = await supabase.functions.invoke('send-discount-code-email', {
        body: data
      });

      if (error) throw error;
      return result;
    },
    onSuccess: () => {
      toast({
        title: 'Success',
        description: 'Discount code email sent successfully',
      });
    },
    onError: (error) => {
      toast({
        title: 'Error',
        description: 'Failed to send discount code email',
        variant: 'destructive',
      });
    },
  });
};

export const useAutoGenerateDiscount = () => {
  return useMutation({
    mutationFn: async (data: {
      orderId: string;
      userId: string;
      orderAmount: number;
      customerEmail: string;
      customerName: string;
      isFirstOrder: boolean;
    }) => {
      const { data: result, error } = await supabase.functions.invoke('auto-generate-discount', {
        body: data
      });

      if (error) throw error;
      return result;
    }
  });
};
